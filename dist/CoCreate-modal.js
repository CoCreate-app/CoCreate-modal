(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["modal"] = factory();
	else
		root["CoCreate"] = root["CoCreate"] || {}, root["CoCreate"]["modal"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "../CoCreate-components/CoCreate-modal/src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../CoCreate-components/CoCreate-modal/src/container.js":
/*!**************************************************************!*\
  !*** ../CoCreate-components/CoCreate-modal/src/container.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal.js */ \"../CoCreate-components/CoCreate-modal/src/modal.js\");\n\n\nfunction ModalContainer(el) {\n  this.modals = [];\n  this.el = el;\n  this.modalClass = this.el.getAttribute(\"data-modal-class\");\n  this.SELECT_ZINDEX = 10;\n  this.UNSELECT_ZINDEX = 2;\n  this.ghostEl = null;\n  this.width = 0;\n  this.height = 0;\n  this.selectedModal = null;\n\n  if (!this.modalClass) {\n    this.modalClass = \"modal\";\n  }\n\n  this._createGhost(this.el.getAttribute(\"data-ghost-class\"));\n\n  this._initModals();\n\n  this._initEvent();\n}\n\nModalContainer.prototype = {\n  _createGhost: function _createGhost(ghostClass) {\n    var node = document.createElement(\"div\");\n\n    if (!ghostClass) {\n      ghostClass = \"modal-ghost\";\n    }\n\n    node.classList.add(ghostClass);\n    this.el.appendChild(node);\n    this.ghostEl = node;\n  },\n  _initModals: function _initModals() {\n    var el_children = document.querySelectorAll(\".\" + this.modalClass);\n\n    for (var i = 0; i < el_children.length; i++) {\n      this.modals.push(new _modal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](el_children[i], {}, this.el));\n    }\n\n    if (!this.selectedModal) {\n      this._selectModal(this.modals[this.modals.length - 1]);\n    }\n  },\n  _initEvent: function _initEvent() {\n    var _this = this;\n\n    this.el.addEventListener('mousemove', function (e) {\n      e.preventDefault();\n\n      if (_this.selectedModal) {\n        _this.selectedModal._onMove(e);\n      }\n    });\n    this.el.addEventListener('mouseup', function (e) {\n      if (_this.selectedModal) {\n        _this.selectedModal._onUp(e);\n      }\n\n      e.preventDefault();\n    }, true);\n    this.el.addEventListener('touchmove', function (e) {\n      // e.preventDefault();\n      if (_this.selectedModal) {\n        _this.selectedModal._onMove(e.touches[0]);\n      }\n    });\n    this.el.addEventListener('touchend', function (e) {\n      // e.preventDefault();\n      if (_this.selectedModal) {\n        _this.selectedModal._onUp(e.touches[0]);\n      }\n    });\n    this.el.addEventListener('cocreate-selectmodal', function (e) {\n      if (_this.selectedModal) {\n        _this._selectModal(e.detail.modal);\n      }\n    });\n    this.el.addEventListener('cocreate-modalghost', function (e) {\n      if (_this.selectedModal) {\n        _this._ghostProcess(e.detail);\n      }\n    });\n    this.el.addEventListener('cocreate-removemodal', function (e) {\n      if (_this.selectedModal) {\n        _this._removeModal(e.detail.modal);\n      }\n    });\n\n    this._initResizeEvent();\n  },\n  _initResizeEvent: function _initResizeEvent() {\n    var _this = this;\n\n    var bound = this.el.getBoundingClientRect();\n    this.width = bound.width;\n    this.height = bound.height;\n    var ro = new ResizeObserver(function (entries, observer) {\n      var contentRect = entries[0].contentRect;\n\n      _this._resizeProcess(_this.width, _this.height, contentRect.width, contentRect.height);\n    });\n    ro.observe(this.el);\n  },\n  _resizeProcess: function _resizeProcess(prevWidth, prevHeight, width, height) {\n    this.width = width;\n    this.height = height;\n\n    if (prevWidth == width && prevHeight == height) {\n      return;\n    }\n\n    var dx = width - prevWidth;\n    var dy = height - prevHeight;\n\n    for (var i = 0; i < this.modals.length; i++) {\n      this.modals[i].resize(dx, dy, width, height);\n    }\n  },\n  _createModal: function _createModal(attr) {\n    var node = document.createElement(\"div\");\n    node.classList.add(this.modalClass);\n    node.style.zIndex = this.SELECT_ZINDEX;\n    this.el.appendChild(node);\n    var modal = new _modal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](node, attr, this.el);\n    this.modals.push(modal);\n\n    this._selectModal(node);\n  },\n  _releaseSelect: function _releaseSelect() {\n    if (!this.selectedModal) {\n      return;\n    }\n\n    this.selectedModal.el.style.zIndex = this.UNSELECT_ZINDEX;\n    this.selectedModal.el.classList.remove(\"modal_selected\");\n    this.selectedModal = null;\n  },\n  _selectModal: function _selectModal(el) {\n    var modal = this._findModalByElement(el);\n\n    if (modal == this.selectedModal) {\n      return;\n    }\n\n    this._releaseSelect();\n\n    this.selectedModal = modal;\n\n    if (this.selectedModal) {\n      this.selectedModal.el.style.zIndex = this.SELECT_ZINDEX;\n      this.selectedModal.el.classList.add('modal_selected');\n      this.ghostEl.style.width = 0;\n      this.ghostEl.style.height = 0;\n    }\n  },\n  _findModalByElement: function _findModalByElement(el) {\n    if (el instanceof _modal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n      return el;\n    }\n\n    for (var i = 0; i < this.modals.length; i++) {\n      if (this.modals[i].el.isEqualNode(el)) {\n        return this.modals[i];\n      }\n    }\n\n    return null;\n  },\n  getModalById: function getModalById(id) {\n    for (var i = 0; i < this.modals.length; i++) {\n      if (this.modals[i].id == id) {\n        return this.modals[i];\n      }\n    }\n\n    return null;\n  },\n  _ghostProcess: function _ghostProcess(info) {\n    this.ghostEl.style.left = info.x + 'px';\n    this.ghostEl.style.top = info.y + 'px';\n    this.ghostEl.style.width = info.w + 'px';\n    this.ghostEl.style.height = info.h + 'px';\n\n    if (info.type === \"show\") {\n      if (this.ghostEl.style.display === 'none') {\n        this.ghostEl.style.display = 'block';\n      }\n\n      this.ghostEl.style.opacity = 0.2;\n    } else {\n      this.ghostEl.style.opacity = 0;\n\n      if (this.ghostEl.style.display !== 'none') {\n        this.ghostEl.style.display = 'none';\n      }\n    }\n\n    return;\n  },\n  _removeModal: function _removeModal(modal) {\n    for (var i = 0; i < this.modals.length; i++) {\n      if (this.modals[i] === modal) {\n        this.el.removeChild(modal.el);\n        this.modals.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.modals.length > 0) {\n      this._selectModal(this.modals[this.modals.length - 1]);\n    } else {\n      this.selectedModal = null;\n    }\n\n    this.el.style.pointerEvents = \"none\";\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ModalContainer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-modal/src/container.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-modal/src/index.js":
/*!**********************************************************!*\
  !*** ../CoCreate-components/CoCreate-modal/src/index.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _container_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./container.js */ \"../CoCreate-components/CoCreate-modal/src/container.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"../CoCreate-components/CoCreate-modal/src/utils.js\");\n\n\n\nfunction CoCreateWindow(id) {\n  var container_id = id ? id : 'modal-viewport';\n  this.container = null;\n  this.id = container_id;\n  this.pageId = Object(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"generateUUID\"])(20);\n  this.isRoot = this._checkRoot();\n\n  if (!this.isRoot) {\n    this.parentId = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"ModalStorage\"].parentPageId;\n    this.pageId = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"ModalStorage\"].pageId;\n    this.rootId = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"ModalStorage\"].rootPageId;\n  } else {\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"ModalStorage\"].rootPageId = this.pageId;\n    this.rootId = this.pageId;\n    this.parentId = this.pageId;\n  }\n\n  this._createContainer();\n\n  this._initWndButtons();\n\n  this._initSocket(); //. set parent_id and page_id for test \n\n\n  var html = document.querySelector(\"html\");\n  html.setAttribute(\"test-parent_id\", this.parentId);\n  html.setAttribute(\"test-page_id\", this.pageId);\n}\n\nCoCreateWindow.prototype = {\n  _checkRoot: function _checkRoot() {\n    try {\n      return window.self === window.top;\n    } catch (e) {\n      return false;\n    }\n  },\n  _createContainer: function _createContainer() {\n    if (this.container) return true;\n    var el = document.getElementById(this.id);\n\n    if (el) {\n      this.container = new _container_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](el);\n      return true;\n    } else {\n      return false;\n    }\n  },\n  _initWndButtons: function _initWndButtons() {\n    var closeBtns = document.querySelectorAll('.btn-modal-close');\n    var minmaxBtn = document.querySelector('.btn-modal-maximize');\n    var parkBtn = document.querySelector('.btn-modal-minimize');\n\n    var _this = this;\n\n    if (closeBtns.length > 0) {\n      for (var i = 0; i < closeBtns.length; i++) {\n        var closeBtn = closeBtns[i];\n        closeBtn.addEventListener('click', function (e) {\n          e.preventDefault();\n\n          _this.sendWindowBtnEvent('close');\n        });\n      }\n    }\n\n    if (minmaxBtn) {\n      minmaxBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        _this.sendWindowBtnEvent('maximize'); // let state = this.getAttribute('data-state');\n        // if (state == 'min') {\n        //   _this.sendWindowBtnEvent('minimize');\n        //   this.setAttribute('data-state', 'max');\n        // } else {\n        //   _this.sendWindowBtnEvent('maximize');\n        //   this.setAttribute('data-state', 'min');\n        // }\n\n      });\n    }\n\n    if (parkBtn) {\n      parkBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        _this.sendWindowBtnEvent('park');\n      });\n    }\n  },\n  sendWindowBtnEvent: function sendWindowBtnEvent(type) {\n    var json = {\n      \"apiKey\": config.apiKey,\n      \"securityKey\": config.securityKey,\n      \"organization_id\": config.organization_Id,\n      \"data\": {\n        \"parentId\": this.parentId,\n        \"pageId\": this.pageId,\n        \"type\": type,\n        \"author\": \"jin\"\n      }\n    };\n    CoCreate.socket.send('windowBtnEvent', json);\n  },\n  _initSocket: function _initSocket() {\n    var _this = this;\n\n    CoCreate.socket.listen('openWindow', function (data) {\n      if (data.parentId == _this.pageId) {\n        _this.container._createModal(data);\n      } // if (data.parentId == _this.pageId) {\n      //   _this.container._createModal(data);\n      // }\n\n    }), CoCreate.socket.listen('windowBtnEvent', function (data) {\n      if (data.parentId == _this.pageId) {\n        var pageId = data.pageId;\n        var type = data.type;\n\n        var modal = _this.container.getModalById(pageId);\n\n        if (modal) {\n          switch (type) {\n            case 'close':\n              _this.container._removeModal(modal);\n\n              break;\n\n            case 'maximize':\n              // minimizeWindow(w);\n              modal._setMaximize();\n\n              break;\n\n            case 'park':\n              modal.togglePark();\n              break;\n\n            default:\n          }\n        }\n      }\n    });\n  },\n  open: function open(aTag) {\n    this.openWindow(aTag);\n  },\n  openWindow: function openWindow(aTag) {\n    var attr = {\n      url: aTag.getAttribute('href'),\n      x: aTag.getAttribute('data-modal_x'),\n      y: aTag.getAttribute('data-modal_y'),\n      width: aTag.getAttribute('data-modal_width'),\n      height: aTag.getAttribute('data-modal_height'),\n      ajax: aTag.getAttribute('data-modal_ajax'),\n      color: aTag.getAttribute('data-modal_color'),\n      header: aTag.getAttribute('data-modal_header') ? aTag.getAttribute('data-modal_header') : \"true\",\n      attributes: CoCreate.utils.getAttributes(aTag)\n    };\n    var open_type = aTag.getAttribute('data-modal_open');\n    open_type = open_type ? open_type : 'root';\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"ModalStorage\"].rootPageId = this.rootId;\n    var open_id = open_type; // if (this.isRoot) {\n    //   ModalStorage.parentPageId = this.pageId;\n    // } else {\n\n    switch (open_type) {\n      case 'parent':\n        open_id = this.parentId;\n        break;\n\n      case 'page':\n        open_id = this.pageId;\n        break;\n\n      case 'root':\n        open_id = this.rootId;\n        break;\n\n      default:\n        open_id = open_type;\n        break;\n      // code\n    }\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"ModalStorage\"].parentPageId = open_id;\n    attr.parentId = open_id; // }\n\n    if (this.isRoot) {\n      if (this._createContainer()) {\n        this.container._createModal(attr);\n      }\n    } else {\n      // attr.parentId = this.parentId;\n      CoCreate.socket.send('openWindow', {\n        \"apiKey\": config.apiKey,\n        \"securityKey\": config.securityKey,\n        \"organization_id\": config.organization_Id,\n        data: attr\n      });\n    }\n  }\n};\nvar CoCreateModal = new CoCreateWindow();\n/* harmony default export */ __webpack_exports__[\"default\"] = (CoCreateModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5tb2RhbC8uLi9Db0NyZWF0ZS1jb21wb25lbnRzL0NvQ3JlYXRlLW1vZGFsL3NyYy9pbmRleC5qcz9hYjA0Il0sIm5hbWVzIjpbIkNvQ3JlYXRlV2luZG93IiwiaWQiLCJjb250YWluZXJfaWQiLCJjb250YWluZXIiLCJwYWdlSWQiLCJnZW5lcmF0ZVVVSUQiLCJpc1Jvb3QiLCJfY2hlY2tSb290IiwicGFyZW50SWQiLCJNb2RhbFN0b3JhZ2UiLCJwYXJlbnRQYWdlSWQiLCJyb290SWQiLCJyb290UGFnZUlkIiwiX2NyZWF0ZUNvbnRhaW5lciIsIl9pbml0V25kQnV0dG9ucyIsIl9pbml0U29ja2V0IiwiaHRtbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNldEF0dHJpYnV0ZSIsInByb3RvdHlwZSIsIndpbmRvdyIsInNlbGYiLCJ0b3AiLCJlIiwiZWwiLCJnZXRFbGVtZW50QnlJZCIsIk1vZGFsQ29udGFpbmVyIiwiY2xvc2VCdG5zIiwicXVlcnlTZWxlY3RvckFsbCIsIm1pbm1heEJ0biIsInBhcmtCdG4iLCJfdGhpcyIsImxlbmd0aCIsImkiLCJjbG9zZUJ0biIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcmV2ZW50RGVmYXVsdCIsInNlbmRXaW5kb3dCdG5FdmVudCIsInR5cGUiLCJqc29uIiwiY29uZmlnIiwiYXBpS2V5Iiwic2VjdXJpdHlLZXkiLCJvcmdhbml6YXRpb25fSWQiLCJDb0NyZWF0ZSIsInNvY2tldCIsInNlbmQiLCJsaXN0ZW4iLCJkYXRhIiwiX2NyZWF0ZU1vZGFsIiwibW9kYWwiLCJnZXRNb2RhbEJ5SWQiLCJfcmVtb3ZlTW9kYWwiLCJfc2V0TWF4aW1pemUiLCJ0b2dnbGVQYXJrIiwib3BlbiIsImFUYWciLCJvcGVuV2luZG93IiwiYXR0ciIsInVybCIsImdldEF0dHJpYnV0ZSIsIngiLCJ5Iiwid2lkdGgiLCJoZWlnaHQiLCJhamF4IiwiY29sb3IiLCJoZWFkZXIiLCJhdHRyaWJ1dGVzIiwidXRpbHMiLCJnZXRBdHRyaWJ1dGVzIiwib3Blbl90eXBlIiwib3Blbl9pZCIsIkNvQ3JlYXRlTW9kYWwiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBR0EsU0FBU0EsY0FBVCxDQUF3QkMsRUFBeEIsRUFBNEI7QUFDMUIsTUFBSUMsWUFBWSxHQUFJRCxFQUFELEdBQU9BLEVBQVAsR0FBWSxnQkFBL0I7QUFDQSxPQUFLRSxTQUFMLEdBQWlCLElBQWpCO0FBQ0EsT0FBS0YsRUFBTCxHQUFVQyxZQUFWO0FBRUEsT0FBS0UsTUFBTCxHQUFjQyw4REFBWSxDQUFDLEVBQUQsQ0FBMUI7QUFDQSxPQUFLQyxNQUFMLEdBQWMsS0FBS0MsVUFBTCxFQUFkOztBQUdBLE1BQUksQ0FBQyxLQUFLRCxNQUFWLEVBQWtCO0FBQ2hCLFNBQUtFLFFBQUwsR0FBZ0JDLHNEQUFZLENBQUNDLFlBQTdCO0FBQ0EsU0FBS04sTUFBTCxHQUFjSyxzREFBWSxDQUFDTCxNQUEzQjtBQUNBLFNBQUtPLE1BQUwsR0FBY0Ysc0RBQVksQ0FBQ0csVUFBM0I7QUFDRCxHQUpELE1BSU87QUFDTEgsMERBQVksQ0FBQ0csVUFBYixHQUEwQixLQUFLUixNQUEvQjtBQUNBLFNBQUtPLE1BQUwsR0FBYyxLQUFLUCxNQUFuQjtBQUNBLFNBQUtJLFFBQUwsR0FBZ0IsS0FBS0osTUFBckI7QUFDRDs7QUFFRCxPQUFLUyxnQkFBTDs7QUFDQSxPQUFLQyxlQUFMOztBQUVBLE9BQUtDLFdBQUwsR0F0QjBCLENBd0IxQjs7O0FBRUEsTUFBSUMsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBWDtBQUNBRixNQUFJLENBQUNHLFlBQUwsQ0FBa0IsZ0JBQWxCLEVBQW9DLEtBQUtYLFFBQXpDO0FBQ0FRLE1BQUksQ0FBQ0csWUFBTCxDQUFrQixjQUFsQixFQUFrQyxLQUFLZixNQUF2QztBQUNEOztBQUVESixjQUFjLENBQUNvQixTQUFmLEdBQTJCO0FBQ3pCYixZQUFVLEVBQUUsc0JBQVc7QUFDckIsUUFB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LEVBQWlCO0FBQ2YsVUFBSSxLQUFLTyxnQkFBTCxFQUFKLEVBQTZCO0FBQzNCLGFBQUtWLFNBQUwsQ0FBZStDLFlBQWYsQ0FBNEJTLElBQTVCO0FBQ0Q7QUFDRixLQUpELE1BSU87QUFDTDtBQUNBZCxjQUFRLENBQUNDLE1BQVQsQ0FBZ0JDLElBQWhCLENBQXFCLFlBQXJCLEVBQW1DO0FBQ2pDLGtCQUFVTixNQUFNLENBQUNDLE1BRGdCO0FBRWpDLHVCQUFlRCxNQUFNLENBQUNFLFdBRlc7QUFHakMsMkJBQW1CRixNQUFNLENBQUNHLGVBSE87QUFJaENLLFlBQUksRUFBRVU7QUFKMEIsT0FBbkM7QUFNRDtBQUNGO0FBL0t3QixDQUEzQjtBQWtMQSxJQUFJZSxhQUFhLEdBQUcsSUFBSTFFLGNBQUosRUFBcEI7QUFFZTBFLDRFQUFmIiwiZmlsZSI6Ii4uL0NvQ3JlYXRlLWNvbXBvbmVudHMvQ29DcmVhdGUtbW9kYWwvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vZGFsQ29udGFpbmVyIGZyb20gXCIuL2NvbnRhaW5lci5qc1wiXG5pbXBvcnQgeyBnZW5lcmF0ZVVVSUQsIE1vZGFsU3RvcmFnZSB9IGZyb20gXCIuL3V0aWxzLmpzXCJcblxuXG5mdW5jdGlvbiBDb0NyZWF0ZVdpbmRvdyhpZCkge1xuICBsZXQgY29udGFpbmVyX2lkID0gKGlkKSA/IGlkIDogJ21vZGFsLXZpZXdwb3J0JztcbiAgdGhpcy5jb250YWluZXIgPSBudWxsO1xuICB0aGlzLmlkID0gY29udGFpbmVyX2lkO1xuICBcbiAgdGhpcy5wYWdlSWQgPSBnZW5lcmF0ZVVVSUQoMjApO1xuICB0aGlzLmlzUm9vdCA9IHRoaXMuX2NoZWNrUm9vdCgpO1xuICBcbiAgXG4gIGlmICghdGhpcy5pc1Jvb3QpIHtcbiAgICB0aGlzLnBhcmVudElkID0gTW9kYWxTdG9yYWdlLnBhcmVudFBhZ2VJZDtcbiAgICB0aGlzLnBhZ2VJZCA9IE1vZGFsU3RvcmFnZS5wYWdlSWQ7XG4gICAgdGhpcy5yb290SWQgPSBNb2RhbFN0b3JhZ2Uucm9vdFBhZ2VJZDtcbiAgfSBlbHNlIHtcbiAgICBNb2RhbFN0b3JhZ2Uucm9vdFBhZ2VJZCA9IHRoaXMucGFnZUlkO1xuICAgIHRoaXMucm9vdElkID0gdGhpcy5wYWdlSWQ7XG4gICAgdGhpcy5wYXJlbnRJZCA9IHRoaXMucGFnZUlkO1xuICB9XG4gIFxuICB0aGlzLl9jcmVhdGVDb250YWluZXIoKTtcbiAgdGhpcy5faW5pdFduZEJ1dHRvbnMoKTtcbiAgXG4gIHRoaXMuX2luaXRTb2NrZXQoKTtcbiAgXG4gIC8vLiBzZXQgcGFyZW50X2lkIGFuZCBwYWdlX2lkIGZvciB0ZXN0IFxuICBcbiAgdmFyIGh0bWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaHRtbFwiKTtcbiAgaHRtbC5zZXRBdHRyaWJ1dGUoXCJ0ZXN0LXBhcmVudF9pZFwiLCB0aGlzLnBhcmVudElkKTtcbiAgaHRtbC5zZXRBdHRyaWJ1dGUoXCJ0ZXN0LXBhZ2VfaWRcIiwgdGhpcy5wYWdlSWQpO1xufVxuXG5Db0NyZWF0ZVdpbmRvdy5wcm90b3R5cGUgPSB7XG4gIF9jaGVja1Jvb3Q6IGZ1bmN0aW9uKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuc2VsZiA9PT0gd2luZG93LnRvcDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0sXG4gIF9jcmVhdGVDb250YWluZXI6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLmNvbnRhaW5lcikgcmV0dXJuIHRydWU7XG5cbiAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkKTtcbiAgICBpZiAoZWwpIHtcbiAgICAgIHRoaXMuY29udGFpbmVyID0gbmV3IE1vZGFsQ29udGFpbmVyKGVsKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9LFxuXG4gIF9pbml0V25kQnV0dG9uczogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNsb3NlQnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5idG4tbW9kYWwtY2xvc2UnKTtcbiAgICB2YXIgbWlubWF4QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi1tb2RhbC1tYXhpbWl6ZScpO1xuICAgIHZhciBwYXJrQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi1tb2RhbC1taW5pbWl6ZScpO1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgXG4gICAgaWYgKGNsb3NlQnRucy5sZW5ndGggPiAwKSB7XG4gICAgICBmb3IgKHZhciBpPTA7IGkgPCBjbG9zZUJ0bnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGNsb3NlQnRuID0gY2xvc2VCdG5zW2ldO1xuICAgICAgICBjbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgX3RoaXMuc2VuZFdpbmRvd0J0bkV2ZW50KCdjbG9zZScpO1xuICAgICAgICB9KSAgXG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGlmIChtaW5tYXhCdG4pIHtcbiAgICAgIG1pbm1heEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBfdGhpcy5zZW5kV2luZG93QnRuRXZlbnQoJ21heGltaXplJyk7XG4gICAgICAgIC8vIGxldCBzdGF0ZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLXN0YXRlJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBpZiAoc3RhdGUgPT0gJ21pbicpIHtcbiAgICAgICAgLy8gICBfdGhpcy5zZW5kV2luZG93QnRuRXZlbnQoJ21pbmltaXplJyk7XG4gICAgICAgIC8vICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdGUnLCAnbWF4Jyk7XG4gICAgICAgIC8vIH0gZWxzZSB7XG4gICAgICAgIC8vICAgX3RoaXMuc2VuZFdpbmRvd0J0bkV2ZW50KCdtYXhpbWl6ZScpO1xuICAgICAgICAvLyAgIHRoaXMuc2V0QXR0cmlidXRlKCdkYXRhLXN0YXRlJywgJ21pbicpO1xuICAgICAgICAvLyB9XG4gICAgICB9KVxuICAgIH1cbiAgICBcbiAgICBpZiAocGFya0J0bikge1xuICAgICAgcGFya0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBfdGhpcy5zZW5kV2luZG93QnRuRXZlbnQoJ3BhcmsnKTtcbiAgICAgIH0pXG4gICAgfVxuICB9LFxuICBcbiAgc2VuZFdpbmRvd0J0bkV2ZW50OiBmdW5jdGlvbih0eXBlKSB7XG4gICAgdmFyIGpzb24gPSB7XG4gICAgICBcImFwaUtleVwiOiBjb25maWcuYXBpS2V5LFxuICAgICAgXCJzZWN1cml0eUtleVwiOiBjb25maWcuc2VjdXJpdHlLZXksXG4gICAgICBcIm9yZ2FuaXphdGlvbl9pZFwiOiBjb25maWcub3JnYW5pemF0aW9uX0lkLFxuICAgICAgXCJkYXRhXCI6IHtcbiAgICAgICAgXCJwYXJlbnRJZFwiOiB0aGlzLnBhcmVudElkLFxuICAgICAgICBcInBhZ2VJZFwiOiB0aGlzLnBhZ2VJZCxcbiAgICAgICAgXCJ0eXBlXCI6IHR5cGUsXG4gICAgICAgIFwiYXV0aG9yXCI6IFwiamluXCJcbiAgICAgIH1cbiAgICB9XG5cbiAgICBDb0NyZWF0ZS5zb2NrZXQuc2VuZCgnd2luZG93QnRuRXZlbnQnLCBqc29uKTtcbiAgfSxcbiAgXG4gIF9pbml0U29ja2V0OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgIENvQ3JlYXRlLnNvY2tldC5saXN0ZW4oJ29wZW5XaW5kb3cnLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICBpZiAoZGF0YS5wYXJlbnRJZCA9PSBfdGhpcy5wYWdlSWQpIHtcbiAgICAgICAgX3RoaXMuY29udGFpbmVyLl9jcmVhdGVNb2RhbChkYXRhKTtcbiAgICAgIH1cbiAgICAgIC8vIGlmIChkYXRhLnBhcmVudElkID09IF90aGlzLnBhZ2VJZCkge1xuICAgICAgLy8gICBfdGhpcy5jb250YWluZXIuX2NyZWF0ZU1vZGFsKGRhdGEpO1xuICAgICAgLy8gfVxuICAgIH0pLFxuICAgIFxuICAgIENvQ3JlYXRlLnNvY2tldC5saXN0ZW4oJ3dpbmRvd0J0bkV2ZW50JywgZnVuY3Rpb24oZGF0YSkge1xuICAgICAgaWYgKGRhdGEucGFyZW50SWQgPT0gX3RoaXMucGFnZUlkKSB7XG4gICAgICAgIFxuICAgICAgICB2YXIgcGFnZUlkID0gZGF0YS5wYWdlSWQ7XG4gICAgICAgIHZhciB0eXBlID0gZGF0YS50eXBlO1xuICAgICAgICBcbiAgICAgICAgdmFyIG1vZGFsID0gX3RoaXMuY29udGFpbmVyLmdldE1vZGFsQnlJZChwYWdlSWQpO1xuICAgICAgICBcbiAgICAgICAgaWYgKG1vZGFsKSB7XG4gICAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlICdjbG9zZSc6XG4gICAgICAgICAgICAgICBfdGhpcy5jb250YWluZXIuX3JlbW92ZU1vZGFsKG1vZGFsKVxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ21heGltaXplJzpcbiAgICAgICAgICAgICAgLy8gbWluaW1pemVXaW5kb3codyk7XG4gICAgICAgICAgICAgIG1vZGFsLl9zZXRNYXhpbWl6ZSgpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3BhcmsnOlxuICAgICAgICAgICAgICBtb2RhbC50b2dnbGVQYXJrKCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB9ICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfSxcbiAgXG4gIG9wZW46IGZ1bmN0aW9uKGFUYWcpIHtcbiAgICB0aGlzLm9wZW5XaW5kb3coYVRhZyk7XG4gIH0sXG4gICBcbiAgb3BlbldpbmRvdzogZnVuY3Rpb24oYVRhZykge1xuICAgIFxuICAgIHZhciBhdHRyID0ge1xuICAgICAgdXJsOiAgICBhVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpLFxuICAgICAgeDogICAgICBhVGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbF94JyksXG4gICAgICB5OiAgICAgIGFUYWcuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsX3knKSxcbiAgICAgIHdpZHRoOiAgYVRhZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWxfd2lkdGgnKSxcbiAgICAgIGhlaWdodDogYVRhZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWxfaGVpZ2h0JyksXG4gICAgICBhamF4OiAgIGFUYWcuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsX2FqYXgnKSxcbiAgICAgIGNvbG9yOiAgYVRhZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWxfY29sb3InKSxcbiAgICAgIGhlYWRlcjogYVRhZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWxfaGVhZGVyJykgPyBhVGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbF9oZWFkZXInKTogXCJ0cnVlXCIsIFxuICAgICAgXG4gICAgICBhdHRyaWJ1dGVzOiBDb0NyZWF0ZS51dGlscy5nZXRBdHRyaWJ1dGVzKGFUYWcpXG4gICAgfVxuICAgIFxuICAgIHZhciBvcGVuX3R5cGUgPSBhVGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbF9vcGVuJyk7XG4gICAgb3Blbl90eXBlID0gb3Blbl90eXBlID8gb3Blbl90eXBlIDogJ3Jvb3QnO1xuICAgIFxuICAgIE1vZGFsU3RvcmFnZS5yb290UGFnZUlkID0gdGhpcy5yb290SWQ7XG4gICAgXG4gICAgdmFyIG9wZW5faWQgPSBvcGVuX3R5cGU7XG4gICAgLy8gaWYgKHRoaXMuaXNSb290KSB7XG4gICAgLy8gICBNb2RhbFN0b3JhZ2UucGFyZW50UGFnZUlkID0gdGhpcy5wYWdlSWQ7XG4gICAgLy8gfSBlbHNlIHtcbiAgICAgIHN3aXRjaCAob3Blbl90eXBlKSB7XG4gICAgICAgIGNhc2UgJ3BhcmVudCc6XG4gICAgICAgICAgb3Blbl9pZCA9IHRoaXMucGFyZW50SWQ7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3BhZ2UnOlxuICAgICAgICAgIG9wZW5faWQgPSB0aGlzLnBhZ2VJZDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncm9vdCc6XG4gICAgICAgICAgb3Blbl9pZCA9IHRoaXMucm9vdElkO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIG9wZW5faWQgPSBvcGVuX3R5cGU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgLy8gY29kZVxuICAgICAgfVxuICAgIE1vZGFsU3RvcmFnZS5wYXJlbnRQYWdlSWQgPSBvcGVuX2lkO1xuICAgIFxuICAgIGF0dHIucGFyZW50SWQgPSBvcGVuX2lkO1xuICAgIC8vIH1cbiAgICBcbiAgICBpZiAodGhpcy5pc1Jvb3QpIHtcbiAgICAgIGlmICh0aGlzLl9jcmVhdGVDb250YWluZXIoKSkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5fY3JlYXRlTW9kYWwoYXR0cik7ICBcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gYXR0ci5wYXJlbnRJZCA9IHRoaXMucGFyZW50SWQ7XG4gICAgICBDb0NyZWF0ZS5zb2NrZXQuc2VuZCgnb3BlbldpbmRvdycsIHtcbiAgICAgICAgXCJhcGlLZXlcIjogY29uZmlnLmFwaUtleSxcbiAgICAgICAgXCJzZWN1cml0eUtleVwiOiBjb25maWcuc2VjdXJpdHlLZXksXG4gICAgICAgIFwib3JnYW5pemF0aW9uX2lkXCI6IGNvbmZpZy5vcmdhbml6YXRpb25fSWQsXG4gICAgICAgICBkYXRhOiBhdHRyXG4gICAgICB9KVxuICAgIH1cbiAgfSxcbn1cblxubGV0IENvQ3JlYXRlTW9kYWwgPSBuZXcgQ29DcmVhdGVXaW5kb3coKTtcblxuZXhwb3J0IGRlZmF1bHQgQ29DcmVhdGVNb2RhbDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-modal/src/index.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-modal/src/modal.js":
/*!**********************************************************!*\
  !*** ../CoCreate-components/CoCreate-modal/src/modal.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"../CoCreate-components/CoCreate-modal/src/utils.js\");\n\n\nfunction Modal(el, options, container) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    return;\n  }\n  /** define constant **/\n\n\n  this.MARGIN = 5;\n  this.FULLSCREEN_MARGIN = -20;\n  this.NO_SNAP = -31;\n  this.SNAP_MARGIN = -10;\n  this.RIGHT_SCROL = 5; // \tif (window.mobilecheck()) {\n  // \t  this.MARGIN = 20;\n  // \t}\n\n  /** options **/\n\n  var defaults = {\n    minWidth: 60,\n    minHeight: 40\n  };\n  this.id = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"generateUUID\"])(20);\n  this.el = el;\n  this.clicked = null;\n  this.redraw = false;\n  this.boundStatus = {};\n  /**\n   * x: mouse x in element\n   * y: mouse y in element\n   * cx: x in document\n   * cy: y in document\n   * */\n\n  this.point = {};\n  this.rect = {};\n  this.clickedInfo = null;\n  this.preSnapped = null;\n  this.prevRect = {};\n  this.isSnap = false;\n  this.isHeader = true;\n  this.dragArea = null;\n  this.headerArea = null;\n  this.width = 0;\n  this.height = 0;\n  this.isParked = false;\n  this.iframe = null;\n  this.container = container;\n  this.options = Object.assign(defaults, options);\n  this.el.setAttribute(\"id\", this.id);\n  window.localStorage.setItem('page_id', this.id);\n\n  this._init();\n\n  this._setModalSize();\n\n  this._initEvent();\n\n  this.__animate();\n}\n\nModal.prototype = {\n  constructor: Modal,\n  _init: function _init() {\n    var opt = this.options;\n    this.isAjax = opt.ajax ? opt.ajax : this.el.getAttribute(\"data-modal_ajax\");\n    var windowURL = opt.url ? opt.url : this.el.getAttribute(\"href\");\n    var width = opt.width ? opt.width : this.el.getAttribute(\"data-modal_width\");\n    var height = opt.height ? opt.height : this.el.getAttribute(\"data-modal_height\");\n    var color = opt.color ? opt.color : this.el.getAttribute(\"data-modal_color\");\n    var x = opt.x ? opt.x : this.el.getAttribute(\"data-modal_x\");\n    var y = opt.y ? opt.y : this.el.getAttribute(\"data-modal_y\");\n    var showHeader = opt.header ? opt.header : this.el.getAttribute(\"data-modal_header\");\n    var attributes = opt.attributes; //. set default\n    // this.el.style.width = \"300px\";\n    // this.el.style.height = \"100%\";\n    // this.el.style.left = 0;\n    // this.el.style.right = 0;\n    // this.el.style.borderColor = \"#888\";\n\n    if (width && width != \"\") {\n      this.el.style.width = width;\n    } else {\n      this.el.style.width = \"600px\";\n    }\n\n    if (height && height != \"\") {\n      this.el.style.height = height;\n    } else {\n      this.el.style.height = \"100%\";\n    }\n\n    if (this.el.parentElement.clientWidth < this.el.clientWidth) {\n      this.el.style.width = \"100%\";\n    }\n\n    if (this.el.parentElement.clientHeight < this.el.clientHeight) {\n      this.el.style.width = \"100%\";\n    }\n\n    if (x && x != \"\") {\n      this.el.style.left = x;\n    } else {\n      var hX = (this.el.parentElement.clientWidth - this.el.offsetWidth) / 2;\n      hX = hX > 0 ? hX : 0;\n      this.el.style.left = hX + \"px\";\n    }\n\n    if (y && y != \"\") {\n      this.el.style.top = y;\n    } else {\n      var hY = (this.el.parentElement.clientHeight - this.el.offsetHeight) / 2;\n      hY = hY > 0 ? hY : 0;\n      this.el.style.top = hY + \"px\";\n    }\n\n    if (color && color !== \"\") this.el.style.borderColor = color;\n\n    if (showHeader == \"true\") {\n      this.isHeader = true;\n\n      this._createTitle();\n    } else {\n      this.isHeader = false;\n\n      this._createDragArea();\n    }\n\n    this.el.innerHTML = this.el.innerHTML + \"<div class=\\\"parked-closeBtn\\\"><i class=\\\"fas fa-times closeBtn\\\"></i></div>\";\n    var iframe = null;\n\n    if (windowURL && windowURL != \"\") {\n      iframe = this.__createContainer(this.headerArea);\n      iframe.src = windowURL;\n    } else if (attributes) {\n      iframe = this.__createContainer(this.headerArea, attributes['data-modal_iframe'] === \"false\" ? \"div\" : \"iframe\");\n\n      if (attributes['data-pass_to']) {\n        iframe.setAttribute('data-pass_id', attributes['data-pass_to']);\n        iframe.setAttribute('data-collection', \"\");\n        iframe.setAttribute('data-document_id', \"\");\n        iframe.setAttribute('data-request_id', Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"generateUUID\"])(20));\n      }\n\n      if (attributes['data-pass_name']) {\n        iframe.setAttribute('name', attributes['data-pass_name']);\n      }\n    } else {\n      return;\n    }\n\n    this.el.appendChild(iframe);\n    this.iframe = iframe;\n  },\n  __createContainer: function __createContainer(isHeader, type) {\n    var tag = type || \"iframe\";\n    var container = document.createElement(tag);\n    container.style.width = \"100%\";\n    container.style.height = \"100%\";\n\n    if (isHeader) {\n      container.style.height = \"calc(100% - 45px)\";\n    }\n\n    if (type != \"iframe\") {\n      container.setAttribute('class', 'domEditor');\n    }\n\n    return container;\n  },\n  _initEvent: function _initEvent() {\n    var self = this;\n\n    if (this.iframe) {\n      this.iframe.addEventListener('load', function () {\n        console.log(self.iframe.contentDocument);\n        var iframeContent = self.iframe.contentDocument;\n        var nav = iframeContent.querySelector('.nav');\n        iframeContent.addEventListener('click', function () {\n          var event = new CustomEvent(\"cocreate-selectmodal\", {\n            detail: {\n              modal: self\n            }\n          });\n          self.el.parentNode.dispatchEvent(event);\n        });\n      });\n    }\n\n    this.el.addEventListener(\"click\", function (e) {\n      var event = new CustomEvent(\"cocreate-selectmodal\", {\n        detail: {\n          modal: self\n        }\n      });\n      self.el.parentNode.dispatchEvent(event);\n    }, true);\n    this.el.addEventListener(\"dblclick\", function (e) {\n      if (self.isParked) {\n        self.isParked = false;\n        self.el.classList.remove(\"modal-parked\");\n      }\n    });\n    this.el.addEventListener('modal-resizing', function (e) {\n      console.log('resizing event trigger');\n    });\n    this.el.addEventListener('touchstart', function (e) {\n      self.changeRightDragEl(true);\n      var event = new CustomEvent(\"cocreate-selectmodal\", {\n        detail: {\n          modal: self\n        }\n      });\n      self.el.parentNode.dispatchEvent(event);\n\n      self._onDown(e.touches[0]);\n    });\n    this.el.addEventListener('mousemove', function (e) {\n      self.changeRightDragEl(false);\n    });\n    this.el.addEventListener('mousedown', function (e) {\n      var event = new CustomEvent(\"cocreate-selectmodal\", {\n        detail: {\n          modal: self\n        }\n      });\n      self.el.parentNode.dispatchEvent(event);\n\n      self._onDown(e);\n    });\n    this.el.addEventListener('mouseup', function (e) {// self.changeRightDragEl(true);\n    });\n\n    this._addButtonEvent();\n\n    this.el.addEventListener(\"modal-resizeend\", function (e) {\n      self._saveFetch(); // self.changeRightDragEl(true);\n\n    });\n    this.el.addEventListener(\"modal-moveend\", function (e) {\n      self._saveFetch(); // self.changeRightDragEl(true);\n\n    });\n  },\n  changeRightDragEl: function changeRightDragEl() {\n    var isRevert = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var right_el = this.el.querySelector('.modal-drag-area-right');\n    var size = isRevert ? \"0px\" : \"-10px\";\n\n    if (right_el) {\n      right_el.style.right = size;\n    }\n\n    this.RIGHT_SCROL = !isRevert ? 0 : 5;\n  },\n  _addButtonEvent: function _addButtonEvent() {\n    var self = this;\n\n    if (this.el.querySelector(\".modal-title-area .closeBtn\")) {\n      this.el.querySelector(\".modal-title-area .closeBtn\").addEventListener(\"click\", function (e) {\n        e.preventDefault();\n        self.el.parentNode.dispatchEvent(new CustomEvent(\"cocreate-removemodal\", {\n          detail: {\n            modal: self\n          }\n        }));\n      });\n    }\n\n    if (this.el.querySelector(\".parked-closeBtn .closeBtn\")) {\n      this.el.querySelector(\".parked-closeBtn .closeBtn\").addEventListener(\"click\", function (e) {\n        e.preventDefault();\n        self.el.parentNode.dispatchEvent(new CustomEvent(\"cocreate-removemodal\", {\n          detail: {\n            modal: self\n          }\n        }));\n      });\n    }\n\n    if (this.el.querySelector(\".modal-title-area .maximizeBtn\")) {\n      this.el.querySelector(\".modal-title-area .maximizeBtn\").addEventListener(\"click\", function (e) {\n        e.preventDefault();\n\n        self._setMaximize();\n      });\n    }\n\n    if (this.el.querySelector(\".modal-title-area .minimizeBtn\")) {\n      this.el.querySelector(\".modal-title-area .minimizeBtn\").addEventListener(\"click\", function (e) {\n        e.preventDefault();\n        self.togglePark();\n      });\n    } // if (this.el.querySelector(\".modal-title-area .parkBtn\")) {\n    //   this.el.querySelector(\".modal-title-area .parkBtn\").addEventListener(\"click\", function(e) {\n    //     self.togglePark()\n    //   })\n    // }\n\n  },\n  togglePark: function togglePark() {\n    if (this.isParked) {\n      this.isParked = false;\n      this.el.classList.remove(\"modal-parked\");\n    } else {\n      this.isParked = true;\n      this.el.classList.add(\"modal-parked\");\n    }\n  },\n  _setModalSize: function _setModalSize() {\n    var bound = this.el.getBoundingClientRect();\n    var parentBound = this.el.parentNode.getBoundingClientRect();\n    this.width = bound.width;\n    this.height = bound.height;\n    this.el.style.left = bound.left - parentBound.left;\n    this.el.style.top = bound.top - parentBound.top;\n  },\n  _saveFetch: function _saveFetch() {\n    if (this.el.classList.contains(\"domEditor\")) {\n      CoCreateHtmlTags.save(this.el);\n    }\n  },\n  _onMove: function _onMove(e) {\n    var data = this.__getBoundStatus(e);\n\n    this.redraw = true;\n  },\n  _onDown: function _onDown(e) {\n    //. set clicked\n    this.__getBoundStatus(e);\n\n    var isResizing = this.boundStatus.isRight || this.boundStatus.isLeft || this.boundStatus.isTop || this.boundStatus.isBottom;\n    this.clickedInfo = {\n      x: this.point.x,\n      y: this.point.y,\n      cx: this.point.cx,\n      cy: this.point.cy,\n      w: this.rect.width,\n      h: this.rect.height,\n      isResizing: isResizing,\n      isMoving: !isResizing && this._isMovable(),\n      boundStatus: this.boundStatus,\n      isChangeStart: true\n    };\n  },\n  _onUp: function _onUp(e) {\n    if (e) {\n      this.__getBoundStatus(e);\n    }\n\n    if (!this.clickedInfo) {\n      return;\n    }\n\n    if (this.clickedInfo.isMoving && !this.isParked) {\n      var p_w = this.el.parentNode.offsetWidth,\n          p_h = this.el.parentNode.offsetHeight;\n      var snap_info = null;\n\n      if (this.__between(this.rect.top, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(this.rect.left, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(p_w - this.rect.right, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(p_h - this.rect.bottom, this.NO_SNAP, this.FULLSCREEN_MARGIN)) {\n        snap_info = {\n          x: 0,\n          y: 0,\n          w: '100%',\n          h: '100%'\n        };\n      } else if (this.__between(this.rect.top, this.NO_SNAP, this.SNAP_MARGIN)) {\n        snap_info = {\n          x: 0,\n          y: 0,\n          w: '100%',\n          h: '50%'\n        };\n      } else if (this.__between(this.rect.left, this.NO_SNAP, this.SNAP_MARGIN)) {\n        snap_info = {\n          x: 0,\n          y: 0,\n          w: '50%',\n          h: '100%'\n        };\n      } else if (this.__between(p_w - this.rect.right, this.NO_SNAP, this.SNAP_MARGIN)) {\n        snap_info = {\n          x: '50%',\n          y: 0,\n          w: '50%',\n          h: '100%'\n        };\n      } else if (this.__between(p_h - this.rect.bottom, this.NO_SNAP, this.SNAP_MARGIN)) {\n        snap_info = {\n          x: 0,\n          y: '50%',\n          w: '100%',\n          h: '50%'\n        };\n      }\n\n      if (snap_info && !this.isSnap) {\n        this.__setBound(this.el, snap_info.x, snap_info.y, snap_info.w, snap_info.h);\n\n        this.preSnapped = {\n          x: this.rect.x,\n          y: this.rect.y,\n          width: this.rect.width,\n          height: this.rect.height\n        };\n        this.isSnap = true;\n      }\n\n      var ghost_info = {\n        x: this.rect.x,\n        y: this.rect.y,\n        w: this.rect.width,\n        h: this.rect.height\n      };\n      this.el.parentNode.dispatchEvent(new CustomEvent(\"cocreate-modalghost\", {\n        detail: ghost_info\n      }));\n    }\n\n    if (this.clickedInfo.isResizing) {\n      this.createModalEvent('modal-resizeend');\n\n      this._setModalSize();\n\n      this.isSnap = false;\n    } else if (this.clickedInfo.isMoving) {\n      this.createModalEvent('modal-moveend');\n    }\n\n    this.clickedInfo = null;\n  },\n  __setBound: function __setBound(el, x, y, w, h) {\n    var borderHeight = this.el.offsetHeight - this.el.clientHeight;\n    var borderWidth = this.el.offsetWidth - this.el.clientWidth;\n    el.style.left = x;\n    el.style.top = y; // el.style.width = \"calc( \" + w + \" - \" + borderWidth + \"px )\";\n    // el.style.height = \"calc( \"  + h + \" - \" + borderHeight + \"px )\";\n\n    el.style.width = w;\n    el.style.height = h;\n  },\n  __setRectInfo: function __setRectInfo() {\n    var bound = this.el.getBoundingClientRect();\n    var parentRect = this.el.parentNode.getBoundingClientRect();\n    this.rect = {};\n    this.rect.x = bound.x - parentRect.x;\n    this.rect.y = bound.y - parentRect.y;\n    this.rect.width = bound.width;\n    this.rect.height = bound.height;\n    this.rect.top = bound.top - parentRect.top;\n    this.rect.bottom = bound.bottom - parentRect.top;\n    this.rect.left = bound.left - parentRect.left;\n    this.rect.right = bound.right - parentRect.left;\n  },\n  __getBoundStatus: function __getBoundStatus(e) {\n    var bound = this.el.getBoundingClientRect();\n    var parentRect = this.el.parentNode.getBoundingClientRect();\n    var x = e.clientX - bound.left; // - parentRect.left;\n\n    var y = e.clientY - bound.top; // - parentRect.top;\n\n    this.__setRectInfo();\n\n    this.point.x = x;\n    this.point.y = y;\n    this.point.cx = e.clientX - parentRect.left;\n    this.point.cy = e.clientY - parentRect.top;\n    this.boundStatus = {\n      isTop: y < this.MARGIN && y > -this.MARGIN,\n      isLeft: x < this.MARGIN && x > -this.MARGIN,\n      isRight: x >= bound.width - this.RIGHT_SCROL && x <= bound.width + this.MARGIN + (this.MARGIN - this.RIGHT_SCROL),\n      isBottom: y >= bound.height - this.MARGIN && y <= bound.height + this.MARGIN\n    };\n    return this.boundStatus;\n  },\n  __between: function __between(x, min, max) {\n    return x >= min && x <= max;\n  },\n  __animate: function __animate() {\n    var self = this;\n    requestAnimationFrame(function () {\n      self.__animate();\n    });\n\n    if (!this.redraw) {\n      return;\n    }\n\n    this.redraw = false;\n    var c_info = this.clickedInfo;\n    var eventName = null;\n    /**\n     * Resize process\n     **/\n\n    if (c_info && c_info.isResizing && !this.isParked) {\n      if (c_info.boundStatus.isRight) this.el.style.width = Math.max(this.point.x, this.options.minWidth) + 'px';\n\n      if (c_info.boundStatus.isBottom) {\n        this.el.style.height = Math.max(this.point.y, this.options.minHeight) + 'px';\n      }\n\n      if (c_info.boundStatus.isLeft) {\n        var c_width = Math.max(c_info.cx - this.point.cx + c_info.w, this.options.minWidth);\n\n        if (c_width > this.options.minWidth) {\n          this.el.style.width = c_width + 'px';\n          this.el.style.left = this.point.cx + 'px';\n        }\n      }\n\n      if (c_info.boundStatus.isTop) {\n        var c_height = Math.max(c_info.cy - this.point.cy + c_info.h, this.options.minHeight);\n\n        if (c_height > this.options.minHeight) {\n          this.el.style.height = c_height + 'px';\n          this.el.style.top = this.point.cy + 'px';\n        }\n      }\n\n      eventName = \"modal-resizing\";\n\n      if (c_info.isChangeStart) {\n        this.clickedInfo.isChangeStart = false;\n        eventName = \"modal-resizestart\";\n      }\n\n      this.createModalEvent(eventName);\n      return;\n    }\n\n    if (c_info && c_info.isMoving) {\n      /** \n       * Ghost Process\n       **/\n      var p_w = this.el.parentNode.offsetWidth,\n          p_h = this.el.parentNode.offsetHeight;\n      var ghost_info = null;\n\n      if (this.__between(this.rect.top, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(this.rect.left, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(p_w - this.rect.right, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(p_h - this.rect.bottom, this.NO_SNAP, this.FULLSCREEN_MARGIN)) {\n        ghost_info = {\n          x: 0,\n          y: 0,\n          w: p_w,\n          h: p_h,\n          type: \"show\"\n        };\n      } else if (this.__between(this.rect.top, this.NO_SNAP, this.SNAP_MARGIN)) {\n        ghost_info = {\n          x: 0,\n          y: 0,\n          w: p_w,\n          h: p_h / 2,\n          type: \"show\"\n        };\n      } else if (this.__between(this.rect.left, this.NO_SNAP, this.SNAP_MARGIN)) {\n        ghost_info = {\n          x: 0,\n          y: 0,\n          w: p_w / 2,\n          h: p_h,\n          type: \"show\"\n        };\n      } else if (this.__between(p_w - this.rect.right, this.NO_SNAP, this.SNAP_MARGIN)) {\n        ghost_info = {\n          x: p_w / 2,\n          y: 0,\n          w: p_w / 2,\n          h: p_h,\n          type: \"show\"\n        };\n      } else if (this.__between(p_h - this.rect.bottom, this.NO_SNAP, this.SNAP_MARGIN)) {\n        ghost_info = {\n          x: 0,\n          y: p_h / 2,\n          w: p_w,\n          h: p_h / 2,\n          type: \"show\"\n        };\n      } else {\n        ghost_info = {\n          x: this.rect.left,\n          y: this.rect.top,\n          w: this.rect.width,\n          h: this.rect.height,\n          type: \"hide\"\n        };\n      }\n\n      if (ghost_info && !this.isParked && !this.isSnap) {\n        this.el.parentNode.dispatchEvent(new CustomEvent(\"cocreate-modalghost\", {\n          detail: ghost_info\n        }));\n      }\n\n      if (this.isSnap) {\n        // this.el.style.left = (this.point.cx - this.preSnapped.width / 2) + 'px';\n        // this.el.style.top = (this.point.cy - Math.min(c_info.y, this.preSnapped.height)) + 'px';\n        this.el.style.left = this.point.cx + 'px';\n        this.el.style.top = this.point.cy + 'px';\n        this.el.style.width = this.preSnapped.width + 'px';\n        this.el.style.height = this.preSnapped.height + 'px';\n        this.isSnap = false;\n      } else {\n        this.el.style.top = this.point.cy - c_info.y + 'px';\n        this.el.style.left = this.point.cx - c_info.x + 'px';\n      }\n\n      eventName = \"modal-moving\";\n\n      if (c_info.isChangeStart) {\n        this.clickedInfo.isChangeStart = false;\n        eventName = \"modal-movestart\";\n      }\n\n      this.createModalEvent(eventName);\n      return;\n    }\n\n    this.redraw = false;\n\n    this._setCursor(this.boundStatus);\n  },\n  _setMaximize: function _setMaximize() {\n    if (!this.isSnap) {\n      this.isSnap = true;\n      this.preSnapped = {\n        x: this.rect.x,\n        y: this.rect.y,\n        width: this.rect.width,\n        height: this.rect.height\n      };\n\n      this.__setBound(this.el, 0, 0, \"100%\", \"100%\");\n    } else {\n      this.isSnap = false;\n      this.el.style.left = this.preSnapped.x + 'px';\n      this.el.style.top = this.preSnapped.y + 'px';\n      this.el.style.width = this.preSnapped.width + 'px';\n      this.el.style.height = this.preSnapped.height + 'px';\n    } // this.clickedInfo = null;\n\n  },\n  _setCursor: function _setCursor(bound) {\n    var cursor = \"default\";\n    if (!this.isParked && bound.isRight && bound.isBottom || bound.isLeft && bound.isTop) cursor = 'nwse-resize';else if (!this.isParked && bound.isRight && bound.isTop || bound.isBottom && bound.left) cursor = 'nwsw-resize';else if (!this.isParked && bound.isRight || bound.isLeft) cursor = 'ew-resize';else if (!this.isParked && bound.isBottom || bound.isTop) cursor = 'ns-resize';else if (this._isMovable()) cursor = \"move\";\n    this.el.style.cursor = cursor;\n    this.setContainerEvent(cursor);\n  },\n  //. setParent Event\n  setContainerEvent: function setContainerEvent(status) {\n    console.log(status);\n    if (!this.container) return;\n\n    if (status != 'default') {\n      this.container.style.pointerEvents = \"auto\";\n    } else {\n      this.container.style.pointerEvents = \"none\";\n    }\n  },\n  _isMovable: function _isMovable() {\n    var width = this.rect.width;\n\n    if (this.isHeader) {\n      width -= 120;\n    }\n\n    return this.point.x > 0 && this.point.x < width && this.point.y > 0 && this.point.y < 50;\n  },\n\n  /**\n   * Modal Events\n   * resize: modal-resizing, modal-resizeend, modal-resizestart\n   * move: modal-moving, modal-moveend, modal-movestart\n   **/\n  createModalEvent: function createModalEvent(eventName) {\n    var event = new CustomEvent(eventName, {});\n    this.el.dispatchEvent(event);\n  },\n  _createTitle: function _createTitle(n) {\n    var header_template = \"<div class=\\\"nav bg-light-gray\\\"><ul class=\\\"modal-title-area\\\">\\n          <li><a class=\\\"minimizeBtn\\\"><i class=\\\"far fa-window-minimize\\\"></i></a></li>\\n          <li><a class=\\\"maximizeBtn\\\"><i class=\\\"far fa-window-restore\\\"></i></a></li>\\n         <!-- <li><a class=\\\"parkBtn\\\"><i class=\\\"fas fa-dot-circle \\\"></i></a></li> -->\\n          <li><a class=\\\"closeBtn\\\"><i class=\\\"fas fa-times\\\"></i></a></li>\\n      </ul></div>\";\n    this.el.innerHTML = header_template + this.el.innerHTML;\n    this.headerArea = this.el.querySelector('.modal-title-area');\n  },\n  _createDragArea: function _createDragArea() {\n    this.dragArea = document.createElement(\"div\");\n    this.dragArea.classList.add(\"modal-drag-area\");\n    var left_area = document.createElement(\"div\");\n    left_area.classList.add(\"modal-drag-area-left\");\n    var right_area = document.createElement(\"div\");\n    right_area.classList.add(\"modal-drag-area-right\");\n    var bottom_area = document.createElement(\"div\");\n    bottom_area.classList.add(\"modal-drag-area-bottom\");\n    this.el.appendChild(this.dragArea);\n    this.el.appendChild(left_area);\n    this.el.appendChild(right_area);\n    this.el.appendChild(bottom_area);\n  },\n  resize: function resize(dx, dy, width, height) {\n    if (this.isSnap) {\n      return;\n    }\n\n    var borderHeight = this.el.offsetHeight - this.el.clientHeight;\n    var borderWidth = this.el.offsetWidth - this.el.clientWidth;\n    width = width - borderWidth;\n    height = height - borderHeight;\n    /** left, right **/\n\n    if (dx !== 0 && !this.isPercentDimesion(this.el.style.width)) {\n      var el_width = this.el.offsetWidth;\n\n      if (el_width + this.rect.left > width && dx < 0) {\n        this.el.style.left = this._setDimension(Math.max(0, this.rect.left + dx));\n      }\n\n      this.el.style.width = this._setDimension(Math.min(el_width, width));\n    }\n    /** top, bottom **/\n\n\n    if (dy !== 0 && !this.isPercentDimesion(this.el.style.height)) {\n      var el_height = this.el.offsetHeight;\n\n      if (el_height + this.rect.top > height && dy < 0) {\n        this.el.style.top = this._setDimension(Math.max(0, this.rect.top + dy));\n      }\n\n      this.el.style.height = this._setDimension(Math.min(el_height, height));\n    }\n\n    this.__setRectInfo();\n  },\n  _setDimension: function _setDimension(data, isPercent) {\n    if (isPercent) {\n      return data + \"%\";\n    } else {\n      return data + \"px\";\n    }\n  },\n  isPercentDimesion: function isPercentDimesion(dimension) {\n    if (!dimension) return false;\n\n    if (typeof dimension === 'string' && dimension.substr(-1, 1) === \"%\") {\n      return true;\n    }\n\n    return false;\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Modal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-modal/src/modal.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-modal/src/utils.js":
/*!**********************************************************!*\
  !*** ../CoCreate-components/CoCreate-modal/src/utils.js ***!
  \**********************************************************/
/*! exports provided: generateUUID, ModalStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateUUID\", function() { return generateUUID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ModalStorage\", function() { return ModalStorage; });\nfunction generateUUID(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  var d = new Date().toTimeString();\n  var random = d.replace(/[\\W_]+/g, \"\").substr(0, 6);\n  result += random;\n  return result;\n}\n\nvar ModalStorage = {};\nObject.defineProperty(ModalStorage, \"rootPageId\", {\n  get: function get() {\n    return window.localStorage.getItem('page_rootId');\n  },\n  set: function set(id) {\n    window.localStorage.setItem('page_rootId', id);\n  }\n});\nObject.defineProperty(ModalStorage, \"parentPageId\", {\n  get: function get() {\n    return window.localStorage.getItem('page_parentId');\n  },\n  set: function set(id) {\n    window.localStorage.setItem('page_parentId', id);\n  }\n});\nObject.defineProperty(ModalStorage, \"pageId\", {\n  get: function get() {\n    return window.localStorage.getItem('page_id');\n  },\n  set: function set(id) {\n    window.localStorage.setItem('page_id', id);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5tb2RhbC8uLi9Db0NyZWF0ZS1jb21wb25lbnRzL0NvQ3JlYXRlLW1vZGFsL3NyYy91dGlscy5qcz9hYmMxIl0sIm5hbWVzIjpbImdlbmVyYXRlVVVJRCIsImxlbmd0aCIsInJlc3VsdCIsImNoYXJhY3RlcnMiLCJjaGFyYWN0ZXJzTGVuZ3RoIiwiaSIsImNoYXJBdCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImQiLCJEYXRlIiwidG9UaW1lU3RyaW5nIiwicmVwbGFjZSIsInN1YnN0ciIsIk1vZGFsU3RvcmFnZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0Iiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldCIsImlkIiwic2V0SXRlbSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEsU0FBU0EsWUFBVCxDQUFzQkMsTUFBdEIsRUFBOEI7QUFDNUIsTUFBSUMsTUFBTSxHQUFhLEVBQXZCO0FBQ0EsTUFBSUMsVUFBVSxHQUFTLGdFQUF2QjtBQUNBLE1BQUlDLGdCQUFnQixHQUFHRCxVQUFVLENBQUNGLE1BQWxDOztBQUNBLE9BQU0sSUFBSUksQ0FBQyxHQUFHLENBQWQsRUFBaUJBLENBQUMsR0FBR0osTUFBckIsRUFBNkJJLENBQUMsRUFBOUIsRUFBbUM7QUFDakNILFVBQU0sSUFBSUMsVUFBVSxDQUFDRyxNQUFYLENBQWtCQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCTCxnQkFBM0IsQ0FBbEIsQ0FBVjtBQUNEOztBQUVELE1BQUlNLENBQUMsR0FBRyxJQUFJQyxJQUFKLEdBQVdDLFlBQVgsRUFBUjtBQUNBLE1BQUlILE1BQU0sR0FBR0MsQ0FBQyxDQUFDRyxPQUFGLENBQVUsU0FBVixFQUFxQixFQUFyQixFQUF5QkMsTUFBekIsQ0FBZ0MsQ0FBaEMsRUFBa0MsQ0FBbEMsQ0FBYjtBQUNBWixRQUFNLElBQUlPLE1BQVY7QUFDQSxTQUFPUCxNQUFQO0FBQ0Q7O0FBRUQsSUFBSWEsWUFBWSxHQUFHLEVBQW5CO0FBRUFDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkYsWUFBdEIsRUFBb0MsWUFBcEMsRUFBa0Q7QUFDaERHLEtBQUcsRUFBRSxlQUFXO0FBQUUsV0FBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixhQUE1QixDQUFQO0FBQW1ELEdBRHJCO0FBRWhEQyxLQUFHLEVBQUUsYUFBU0MsRUFBVCxFQUFhO0FBQUVKLFVBQU0sQ0FBQ0MsWUFBUCxDQUFvQkksT0FBcEIsQ0FBNEIsYUFBNUIsRUFBMkNELEVBQTNDO0FBQWlEO0FBRnJCLENBQWxEO0FBS0FQLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkYsWUFBdEIsRUFBb0MsY0FBcEMsRUFBb0Q7QUFDbERHLEtBQUcsRUFBRSxlQUFXO0FBQUUsV0FBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixlQUE1QixDQUFQO0FBQXFELEdBRHJCO0FBRWxEQyxLQUFHLEVBQUUsYUFBU0MsRUFBVCxFQUFhO0FBQUVKLFVBQU0sQ0FBQ0MsWUFBUCxDQUFvQkksT0FBcEIsQ0FBNEIsZUFBNUIsRUFBNkNELEVBQTdDO0FBQW1EO0FBRnJCLENBQXBEO0FBS0FQLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkYsWUFBdEIsRUFBb0MsUUFBcEMsRUFBOEM7QUFDNUNHLEtBQUcsRUFBRSxlQUFXO0FBQUUsV0FBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixTQUE1QixDQUFQO0FBQStDLEdBRHJCO0FBRTVDQyxLQUFHLEVBQUUsYUFBU0MsRUFBVCxFQUFhO0FBQUVKLFVBQU0sQ0FBQ0MsWUFBUCxDQUFvQkksT0FBcEIsQ0FBNEIsU0FBNUIsRUFBdUNELEVBQXZDO0FBQTZDO0FBRnJCLENBQTlDIiwiZmlsZSI6Ii4uL0NvQ3JlYXRlLWNvbXBvbmVudHMvQ29DcmVhdGUtbW9kYWwvc3JjL3V0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2VuZXJhdGVVVUlEKGxlbmd0aCkge1xuICB2YXIgcmVzdWx0ICAgICAgICAgICA9ICcnO1xuICB2YXIgY2hhcmFjdGVycyAgICAgICA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSc7XG4gIHZhciBjaGFyYWN0ZXJzTGVuZ3RoID0gY2hhcmFjdGVycy5sZW5ndGg7XG4gIGZvciAoIHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrICkge1xuICAgIHJlc3VsdCArPSBjaGFyYWN0ZXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFyYWN0ZXJzTGVuZ3RoKSk7XG4gIH1cbiAgXG4gIHZhciBkID0gbmV3IERhdGUoKS50b1RpbWVTdHJpbmcoKTtcbiAgdmFyIHJhbmRvbSA9IGQucmVwbGFjZSgvW1xcV19dKy9nLCBcIlwiKS5zdWJzdHIoMCw2KTtcbiAgcmVzdWx0ICs9IHJhbmRvbTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxudmFyIE1vZGFsU3RvcmFnZSA9IHt9O1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoTW9kYWxTdG9yYWdlLCBcInJvb3RQYWdlSWRcIiwge1xuICBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwYWdlX3Jvb3RJZCcpO30sXG4gIHNldDogZnVuY3Rpb24oaWQpIHsgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwYWdlX3Jvb3RJZCcsIGlkKTsgfVxufSlcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KE1vZGFsU3RvcmFnZSwgXCJwYXJlbnRQYWdlSWRcIiwge1xuICBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwYWdlX3BhcmVudElkJyk7fSxcbiAgc2V0OiBmdW5jdGlvbihpZCkgeyB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3BhZ2VfcGFyZW50SWQnLCBpZCk7IH1cbn0pXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShNb2RhbFN0b3JhZ2UsIFwicGFnZUlkXCIsIHtcbiAgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncGFnZV9pZCcpO30sXG4gIHNldDogZnVuY3Rpb24oaWQpIHsgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwYWdlX2lkJywgaWQpOyB9XG59KVxuXG5cbmV4cG9ydCB7Z2VuZXJhdGVVVUlELCBNb2RhbFN0b3JhZ2V9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-modal/src/utils.js\n");

/***/ })

/******/ })["default"];
});